/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { DataModels } from "@process-engine/consumer_api_contracts";
import { IUserTask } from "./usertask-component";
import { IManualTask } from "./manualtask-component/imanualtask";
export namespace Components {
    interface BooleanFormField {
        "formField": DataModels.UserTasks.UserTaskFormField;
    }
    interface DateFormField {
        "formField": DataModels.UserTasks.UserTaskFormField;
    }
    interface DynamicUsertaskComponent {
        "usertask": IUserTask;
    }
    interface EnumFormField {
        "formField": DataModels.UserTasks.UserTaskFormField;
    }
    interface LongFormField {
        "formField": DataModels.UserTasks.UserTaskFormField;
    }
    interface ManualtaskComponent {
        "manualtask": IManualTask;
    }
    interface NumberFormField {
        "formField": DataModels.UserTasks.UserTaskFormField;
    }
    interface StringFormField {
    }
}
declare global {
    interface HTMLBooleanFormFieldElement extends Components.BooleanFormField, HTMLStencilElement {
    }
    var HTMLBooleanFormFieldElement: {
        prototype: HTMLBooleanFormFieldElement;
        new (): HTMLBooleanFormFieldElement;
    };
    interface HTMLDateFormFieldElement extends Components.DateFormField, HTMLStencilElement {
    }
    var HTMLDateFormFieldElement: {
        prototype: HTMLDateFormFieldElement;
        new (): HTMLDateFormFieldElement;
    };
    interface HTMLDynamicUsertaskComponentElement extends Components.DynamicUsertaskComponent, HTMLStencilElement {
    }
    var HTMLDynamicUsertaskComponentElement: {
        prototype: HTMLDynamicUsertaskComponentElement;
        new (): HTMLDynamicUsertaskComponentElement;
    };
    interface HTMLEnumFormFieldElement extends Components.EnumFormField, HTMLStencilElement {
    }
    var HTMLEnumFormFieldElement: {
        prototype: HTMLEnumFormFieldElement;
        new (): HTMLEnumFormFieldElement;
    };
    interface HTMLLongFormFieldElement extends Components.LongFormField, HTMLStencilElement {
    }
    var HTMLLongFormFieldElement: {
        prototype: HTMLLongFormFieldElement;
        new (): HTMLLongFormFieldElement;
    };
    interface HTMLManualtaskComponentElement extends Components.ManualtaskComponent, HTMLStencilElement {
    }
    var HTMLManualtaskComponentElement: {
        prototype: HTMLManualtaskComponentElement;
        new (): HTMLManualtaskComponentElement;
    };
    interface HTMLNumberFormFieldElement extends Components.NumberFormField, HTMLStencilElement {
    }
    var HTMLNumberFormFieldElement: {
        prototype: HTMLNumberFormFieldElement;
        new (): HTMLNumberFormFieldElement;
    };
    interface HTMLStringFormFieldElement extends Components.StringFormField, HTMLStencilElement {
    }
    var HTMLStringFormFieldElement: {
        prototype: HTMLStringFormFieldElement;
        new (): HTMLStringFormFieldElement;
    };
    interface HTMLElementTagNameMap {
        "boolean-form-field": HTMLBooleanFormFieldElement;
        "date-form-field": HTMLDateFormFieldElement;
        "dynamic-usertask-component": HTMLDynamicUsertaskComponentElement;
        "enum-form-field": HTMLEnumFormFieldElement;
        "long-form-field": HTMLLongFormFieldElement;
        "manualtask-component": HTMLManualtaskComponentElement;
        "number-form-field": HTMLNumberFormFieldElement;
        "string-form-field": HTMLStringFormFieldElement;
    }
}
declare namespace LocalJSX {
    interface BooleanFormField {
        "formField"?: DataModels.UserTasks.UserTaskFormField;
    }
    interface DateFormField {
        "formField"?: DataModels.UserTasks.UserTaskFormField;
    }
    interface DynamicUsertaskComponent {
        "onCanceled"?: (event: CustomEvent<any>) => void;
        "onSubmitted"?: (event: CustomEvent<any>) => void;
        "usertask"?: IUserTask;
    }
    interface EnumFormField {
        "formField"?: DataModels.UserTasks.UserTaskFormField;
    }
    interface LongFormField {
        "formField"?: DataModels.UserTasks.UserTaskFormField;
    }
    interface ManualtaskComponent {
        "manualtask"?: IManualTask;
        "onCanceled"?: (event: CustomEvent<any>) => void;
        "onContinued"?: (event: CustomEvent<any>) => void;
    }
    interface NumberFormField {
        "formField"?: DataModels.UserTasks.UserTaskFormField;
    }
    interface StringFormField {
    }
    interface IntrinsicElements {
        "boolean-form-field": BooleanFormField;
        "date-form-field": DateFormField;
        "dynamic-usertask-component": DynamicUsertaskComponent;
        "enum-form-field": EnumFormField;
        "long-form-field": LongFormField;
        "manualtask-component": ManualtaskComponent;
        "number-form-field": NumberFormField;
        "string-form-field": StringFormField;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "boolean-form-field": LocalJSX.BooleanFormField & JSXBase.HTMLAttributes<HTMLBooleanFormFieldElement>;
            "date-form-field": LocalJSX.DateFormField & JSXBase.HTMLAttributes<HTMLDateFormFieldElement>;
            "dynamic-usertask-component": LocalJSX.DynamicUsertaskComponent & JSXBase.HTMLAttributes<HTMLDynamicUsertaskComponentElement>;
            "enum-form-field": LocalJSX.EnumFormField & JSXBase.HTMLAttributes<HTMLEnumFormFieldElement>;
            "long-form-field": LocalJSX.LongFormField & JSXBase.HTMLAttributes<HTMLLongFormFieldElement>;
            "manualtask-component": LocalJSX.ManualtaskComponent & JSXBase.HTMLAttributes<HTMLManualtaskComponentElement>;
            "number-form-field": LocalJSX.NumberFormField & JSXBase.HTMLAttributes<HTMLNumberFormFieldElement>;
            "string-form-field": LocalJSX.StringFormField & JSXBase.HTMLAttributes<HTMLStringFormFieldElement>;
        }
    }
}
